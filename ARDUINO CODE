#include "SPI.h"        //libraries
#include "Ethernet.h"
#include "WebServer.h"   // download library webduino and calling webserver in webduino

static uint8_t mac[6] = { 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA };
//orizo dieuthinsi mac gia thn Ethernet shield
static uint8_t ip[4] = { 192, 168, 10, 250 }; // i ip mas

#define PREFIX "/remote"
WebServer webserver(PREFIX, 80);  //open the port
//define pins
#define RED_PIN 6       
#define GREEN_PIN 7
#define BLACK_PIN 8
#define BLUE_PIN 9

int red = 0;  //pin 6, red wire goes to device 1
int green = 0;   //pin 7, green wire goes to device 2
int black = 0;  //pin 8,  black wire goes to device 3
int blue = 0;//pin 9, blues wire goes to device 4
void rgbCmd(WebServer &server, WebServer::ConnectionType type, char *, bool)
{
  if (type == WebServer::POST)
  {
    bool repeat;
    char name[16], value[16];
    do
    {
      repeat = server.readPOSTparam(name, 16, value, 16);

      if (strcmp(name, "red") == 0)
      {
        red = strtoul(value, NULL, 10);
      }
      if (strcmp(name, "green") == 0)
      {
        green = strtoul(value, NULL, 10);
      }
      if (strcmp(name, "black") == 0)
      {
        black = strtoul(value, NULL, 10);
      }
      if (strcmp(name, "blue") == 0)
      {
        blue = strtoul(value, NULL, 10);
      }
    } while (repeat);    

    server.httpSeeOther(PREFIX);

    return;
  }

  server.httpSuccess();

  if (type == WebServer::GET)
  {
    P(message) = 
"<!DOCTYPE html><html><head>"
  "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">"
  "<title>ELEGXOS TESSARON SUSKEUON</title>"
  "<link rel=\"stylesheet\" href=\"http://code.jquery.com/mobile/1.3.1/jquery.mobile-1.3.1.min.css\" />"
  "<script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"></script>"
  "<script src=\"http://code.jquery.com/mobile/1.3.1/jquery.mobile-1.3.1.min.js\"></script>"
  "<script>"
// va
    "$(document).ready(function(){ $('#red, #green, #blue').slider; $('#red, #green, #blue').bind( 'change', function(event, ui) { jQuery.ajaxSetup({timeout: 1000}); /*not to DDoS the Arduino, you might have to change this to some threshold value that fits your setup*/ var id = $(this).attr('id'); var strength = $(this).val(); if (id == 'red') $.post('/remote', { red: strength } ); if (id == 'green') $.post('/remote', { green: strength } ); if (id == 'blue') $.post('/remote', { blue: strength } ); });});"
  "</script>"
"</head>"
"<body>"
  "<div data-role=\"header\" data-position=\"inline\"><h1>CONTROL DEVICE</h1></div>"   
    "<div class=\"ui-body ui-body-a\">"        
      "<div data-role=\"fieldcontain\">"
        "<h2>Φωτιστικό 1</h2>"
	"<label for=\"flip-3\">Διακόπτης 1</label>"
	"<select name=\"flip-3\" id=\"red\" data-role=\"slider\" data-theme=\"b\">"
		"<option value=\"0\">OFF</option>"
		"<option value=\"255\">ON</option>"
	"</select> "
        "<h2>φωτιστικό 2</h2>"
        "<label for=\"flip-3\">Διακόπτης 2</label>"
	"<select name=\"flip-3\" id=\"green\" data-role=\"slider\" data-theme=\"b\">"
		"<option value=\"0\">OFF</option>"
		"<option value=\"255\">ON</option>"
	"</select> "
        "<h2>ραδιόφωνο</h2>"
        "<label for=\"flip-3\">Διακόπτης 3</label>"
	"<select name=\"flip-3\" id=\"black\" data-role=\"slider\" data-theme=\"b\">"
		"<option value=\"0\">OFF</option>"
		"<option value=\"255\">ON</option>"
	"</select> "
        "<h2>αερόθερμο</h2>"
        "<label for=\"flip-3\">Διακόπτης 4</label>"
	"<select name=\"flip-3\" id=\"blue\" data-role=\"slider\" data-theme=\"b\">"
		"<option value=\"0\">OFF</option>"
		"<option value=\"255\">ON</option>"
	"</select> "
      "</div>"
     "<center> 
<img src="http://www.greeceandroid.gr/images/Android.png"></center>"      
    "</div>"
  "</body>"
"</html>";

    server.printP(message);
  }
}

void setup()
{
  pinMode(RED_PIN, OUTPUT);
  pinMode(GREEN_PIN, OUTPUT);
  pinMode(BLACK_PIN, OUTPUT);
  pinMode(BLUE_PIN, OUTPUT); 
  Ethernet.begin(mac, ip);

  webserver.setDefaultCommand(&rgbCmd);

  webserver.begin();
}

void loop()
{
  webserver.processConnection();
  analogWrite(RED_PIN, red);
  analogWrite(GREEN_PIN, green);
  analogWrite(BLACK_PIN, blue);
  analogWrite(BLUE_PIN, blue);
